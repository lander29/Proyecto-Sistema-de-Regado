Sistema de Riego Automatico.
//Autores: Amadeo Nguema - Lander Hernandez - Miguel Chilquillo

#include <SimpleDHT.h>
#include <SimpleDHT.h>
#include <SPI.h>
#define humidity_sensor_pin A0
#define humidity1_sensor1_pin A1
#define humidity2_sensor2_pin A2
#define humidity3_sensor3_pin A3
#define ldr_pin A5



//Bibliotecas para los módulos sensores usados necesarias
//Y definición de variables para los sensores de humedad y LDR en los pines A0 a A5
 
int pinDHT11 = 12;
SimpleDHT11 dht11;
int ldr_value = 0;


int water_pump_speed1 = 255;
int valvula1_pump1_pin1 = 4;
int water_pump_speed2 = 255;
int valvula2_pump2_pin2 = 5;
int water_pump_speed3 = 255;
int valvula3_pump3_pin3 = 6;
int water_pump_speed4 = 255;
int valvula4_pump4_pin4 = 7;


//Aquí puedes dar valores desde 0 a 255 para la velocidad a la que trabajará la minibomba
//Haz pruebas previas del caudal y configura la. Yo he //elegido 255 pero ustedes pueden elegir la que estimen conveniente. A más velocidad, mayor //bombeo de agua
void setup() {
  Serial.begin(9600);
  pinMode(4,OUTPUT);
  pinMode(5,OUTPUT);
  pinMode(6,OUTPUT);
  pinMode(7,OUTPUT);
}
void loop() {
// Mide la temperatura y humedad relativa y muestra resultado
  Serial.println("♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡");
  Serial.println("Muestra DHT11…");
   
  byte temperature = 0;
  byte humidity_in_air = 0;
  byte data[40] = {0};
  if (dht11.read(pinDHT11, &temperature, &humidity_in_air, data)) {
    Serial.print("Lectura del sensor DHT11 fallida");
    return;
  }
   
  Serial.print("Muestra RAW Bits: ");
  for (int i = 0; i < 40; i++) { Serial.print((int)data[i]); if (i > 0 && ((i + 1) % 4) == 0) {
      Serial.print(" ");
    }
  }
  Serial.println("");
   
  Serial.print("Muestra OK: ");
  Serial.print("Temperatura ambiente: ");Serial.print((int)temperature); Serial.print(" *C, ");
  Serial.print("Humedad relativa en aire: ");Serial.print((int)humidity_in_air); Serial.println(" %");
   
  int ground_humidity_value = map(analogRead(humidity_sensor_pin), 0, 1023, 100, 0);
  Serial.print("Humedad en suelo 1: ");
  Serial.print(ground_humidity_value);
  Serial.println("%");

  int ground1_humidity1_value1 = map(analogRead(humidity1_sensor1_pin), 0, 1023, 100, 0);
  Serial.print("Humedad en suelo 2: ");
  Serial.print(ground1_humidity1_value1);
  Serial.println("%");


  int ground2_humidity2_value2 = map(analogRead(humidity2_sensor2_pin), 0, 1023, 100, 0);
  Serial.print("Humedad en suelo 3: ");
  Serial.print(ground2_humidity2_value2);
  Serial.println("%");

  int ground3_humidity3_value3 = map(analogRead(humidity3_sensor3_pin), 0, 1023, 100, 0);
  Serial.print("Humedad en suelo 4: ");
  Serial.print(ground3_humidity3_value3);
  Serial.println("%");

  int ldr_value = map(analogRead(ldr_pin), 1023, 0, 100, 0);
  ldr_value = 100 - ldr_value;
  Serial.print("Luz ambiente: ");
  Serial.print(ldr_value);
  Serial.println("%");
   Serial.println("♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡♡");
 
//**************************************************************
// Condiciones de riego 
// Si la humedad en el suelo es igual o inferior al 60%, si la luminosidad es inferior al 30%,
// Si la temperatura es inferior al 35%, entonces el sistema de riego riega. 
// En caso de que no se  cumpla alguno o ninguno de los 3 requisitos anteriores,
// el sistema de riego no riega
//**************************************************************
//Aquí puedes variar los parámetros que necesites de 60, 35 y 30, e incluso usar otros operandos <>=...
 if( ground_humidity_value <= 60 && ldr_value>15 && temperature<25) {
 digitalWrite( valvula1_pump1_pin1, HIGH);
 digitalWrite(4, HIGH);
 Serial.println("regando maceta 1");
 analogWrite( valvula1_pump1_pin1, water_pump_speed1);
 }
 else{
 digitalWrite( valvula1_pump1_pin1, LOW);
 Serial.println("Riego detenido 1");
 
 }
 if( ground1_humidity1_value1 <= 60 && ldr_value>15 && temperature<25) {
 digitalWrite(valvula2_pump2_pin2, HIGH);
 digitalWrite(5, HIGH);
 Serial.println("regando maceta 2");
 analogWrite(valvula2_pump2_pin2, water_pump_speed2);
 }
 else{
 digitalWrite(valvula2_pump2_pin2, LOW);
 Serial.println("Riego detenido 2");
 
 }
if( ground2_humidity2_value2 <= 60 && ldr_value>15 && temperature<25) {
 digitalWrite(valvula3_pump3_pin3, HIGH);
 digitalWrite(6, HIGH);
 Serial.println("regando maceta 3");
 analogWrite(valvula3_pump3_pin3, water_pump_speed3);
 }
 else{
 digitalWrite(valvula3_pump3_pin3, LOW);
 Serial.println("Riego detenido 3");
 }
if( ground3_humidity3_value3 <= 60 && ldr_value>15 && temperature<25) {
 digitalWrite(valvula4_pump4_pin4, HIGH);
 digitalWrite(7, HIGH);
 Serial.println("regando maceta 4");
 analogWrite(valvula4_pump4_pin4, water_pump_speed4);
 }
 else{
 digitalWrite(valvula4_pump4_pin4, LOW);
 Serial.println("Riego detenido 4");
 }
 if (digitalRead(valvula4_pump4_pin4) == HIGH || digitalRead(valvula3_pump3_pin3) == HIGH || digitalRead(valvula2_pump2_pin2) == HIGH || digitalRead(valvula1_pump1_pin1) == HIGH){
  delay(8000);
 }
// Ejecuta el código cada 2000 milisegundos, es decir, 2 segundos. Puedes variar la frecuencia de muestreo

